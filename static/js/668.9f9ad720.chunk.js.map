{"version":3,"file":"static/js/668.9f9ad720.chunk.js","mappings":"6LACA,EAAwB,iCAAxB,EAAgE,gCAAhE,EAA4G,qCAA5G,EAAqK,6CAArK,EAA2N,kCAA3N,EAAqQ,iC,2DC4FrQ,EAlF0B,WAEtB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,MAAVD,MAGR,GAAsBE,EAAAA,EAAAA,WAAS,GAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAc,WAEZD,GADAD,IAQFG,EAAoBC,EAAAA,KAAaC,MAAM,CACzCC,SAAUF,EAAAA,KAAaG,UAAU,4GAAuBC,SAAS,wEAerE,OACI,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAgB,SAAhC,UACI,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACD,eAAgB,SAA3B,UACI,gBAAKE,UAAWC,EAAhB,UACI,SAAC,KAAD,CACIC,cAAe,CACXT,SAAU,IAEdU,gBAAc,EACdC,SAhBE,SAACC,GACfrB,GACAF,GAASwB,EAAAA,EAAAA,IAAeD,EAAOZ,SAAUT,KAe7BuB,iBAAkBjB,EANtB,SAQK,gBAAGe,EAAH,EAAGA,OAAQG,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,WAAYC,EAAtD,EAAsDA,QAASC,EAA/D,EAA+DA,aAAcC,EAA7E,EAA6EA,MAA7E,OACG,kBAAMV,SAAUS,EAAcb,UAAWC,EAAzC,WAEI,gBAAKD,UAAWC,EAAhB,4BACA,gBAAKD,UAAWC,EAAhB,mCAEA,eAAGc,MAAO,CAAEC,UAAW,QAAvB,WACI,kBAAOC,QAAO,aAAd,uBAA8C,mBAC9C,kBACIjB,UAAW,QACXkB,KAAM/B,EAAG,WAAgB,OACzBgC,KAAI,WACJC,SAAUV,EACVW,OAAQV,EACRW,MAAOjB,EAAOZ,YAElB,iBAAM8B,QAASlC,EAAf,SACKF,GAAM,SAAC,MAAD,KAAY,SAAC,MAAD,SAG1BsB,EAAQhB,UAAYe,EAAOf,WAAY,cAAGO,UAAWC,EAAd,SAA6BO,EAAOf,YAC5E,0BACI,mBAAQO,UAAWC,EACfuB,UAAWZ,IAAYE,EACvBC,MAAO,CAAEU,QAAUb,GAAYE,EAAgB,IAAR,OACvCI,KAAI,SAHR","sources":["webpack://my-app/./src/components/Registration/ForgotPassword/CreateNewPassword/CreateNewPassword.module.css?8696","components/Registration/ForgotPassword/CreateNewPassword/CreateNewPassword.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block\":\"CreateNewPassword_block__s4mFE\",\"form\":\"CreateNewPassword_form__UQphM\",\"incubator\":\"CreateNewPassword_incubator__Cx0e5\",\"createNewPassword\":\"CreateNewPassword_createNewPassword__eKv1T\",\"Button\":\"CreateNewPassword_Button__pI2dE\",\"error\":\"CreateNewPassword_error__qlf8P\"};","import React, { useState } from 'react';\r\nimport { Formik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport styles from './CreateNewPassword.module.css'\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from '@mui/material';\r\nimport { setNewPassword } from '../../../Bll/auth-reducer';\r\n\r\n\r\nconst CreateNewPassword = () => {\r\n\r\n    const dispatch = useDispatch<any>()\r\n    const { token } = useParams<{ token: string }>()\r\n\r\n\r\n    const [eye, setEye] = useState(true)\r\n    const handleClick = () => {\r\n        if (eye) {\r\n            setEye(false);\r\n        } else {\r\n            setEye(true)\r\n        }\r\n    }\r\n\r\n\r\n    const validationsSchema = yup.object().shape({\r\n        password: yup.string().typeError('Должно быть строкой').required('Обязательно'),\r\n    })\r\n\r\n\r\n    type SubmitHandlerType = {\r\n        password: string\r\n    }\r\n\r\n    const submitHandler = (values: any) => {\r\n        if (token)\r\n            dispatch(setNewPassword(values.password, token))\r\n            \r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container justifyContent={'center'}>\r\n            <Grid item justifyContent={'center'}>\r\n                <div className={styles.block}>\r\n                    <Formik\r\n                        initialValues={{\r\n                            password: '',\r\n                        }}\r\n                        validateOnBlur\r\n                        onSubmit={submitHandler}\r\n                        validationSchema={validationsSchema}\r\n                    >\r\n                        {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\r\n                            <form onSubmit={handleSubmit} className={styles.form}>\r\n\r\n                                <div className={styles.incubator}> It-incubator</div>\r\n                                <div className={styles.createNewPassword}> Create new password</div>\r\n\r\n                                <p style={{ marginTop: '77px' }}>\r\n                                    <label htmlFor={`secondName`}>password</label><br />\r\n                                    <input\r\n                                        className={'input'}\r\n                                        type={eye ? `password` : 'text'}\r\n                                        name={`password`}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.password}\r\n                                    />\r\n                                    <span onClick={handleClick}>\r\n                                        {eye ? <FaEye /> : <FaEyeSlash />}\r\n                                    </span>\r\n                                </p>\r\n                                {touched.password && errors.password && <p className={styles.error}>{errors.password}</p>}\r\n                                <div>\r\n                                    <button className={styles.Button}\r\n                                        disabled={!isValid || !dirty}\r\n                                        style={{ opacity: !isValid || !dirty ? '0.5' : '1' }}\r\n                                        type={`submit`}\r\n                                    >Create New Password\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CreateNewPassword\r\n\r\n"],"names":["dispatch","useDispatch","token","useParams","useState","eye","setEye","handleClick","validationsSchema","yup","shape","password","typeError","required","Grid","container","justifyContent","item","className","styles","initialValues","validateOnBlur","onSubmit","values","setNewPassword","validationSchema","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","style","marginTop","htmlFor","type","name","onChange","onBlur","value","onClick","disabled","opacity"],"sourceRoot":""}